
/home/megalith/louminadi/git/illuminated/LICENSE:
```/home/megalith/louminadi/git/illuminated/LICENSE
MIT License

Copyright (c) 2025 Rick Collette

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

```
---

/home/megalith/louminadi/git/illuminated/CHANGELOG.md:
```md
# üìú Changelog

## [1.0.3] - 2025-05-01

### Added for v1.0.3

- `illuminated.sh` now supports CLI modes: `--skip-existing`, `--reinstall-bluemap`, `--reinstall-website`
- Automatic container backups before destroy (with versioned archives)
- Automatic restoration of persistent data after reinstall
- BlueMap automatic re-render every 4 hours via cron
- Improved compression (`zstd`) and rotation (keep 7 days of backups)
- Dynamic IP detection for nginx SSL config
- Smarter container handling with "destroy-and-recreate" or "skip existing"
- Better modular structure for future updates (PaperMC, plugins, website)

### Changed

- Updated `build.func` to support dynamic messaging, backup, restore
- Updated `create_containers.sh` to support backup-aware operations
- Updated nginx templates to handle mc.DOMAIN.com structure dynamically

---

## [1.0.0] - 2025-05-01

### Added for v1.0.0

- Initial release of Illuminated
- Proxmox LXC container deployment
- Minecraft Server with LouMinadiCraft plugin
- BlueMap Live Renderer
- Static website with glowing landing page
- Reverse proxy + SSL auto setup
- Backup automation every 4 hours

---

```
---

/home/megalith/louminadi/git/illuminated/illuminated.sh:
```sh
#!/usr/bin/env bash
set -euo pipefail

# Require DOMAIN and DISCORD_WEBHOOK
if [[ -z "${DOMAIN:-}" || -z "${DISCORD_WEBHOOK:-}" ]]; then
  echo "‚ùå ERROR: You must run this script with DOMAIN and DISCORD_WEBHOOK set!"
  echo ""
  echo "Example:"
  echo "DOMAIN='mc.example.com' DISCORD_WEBHOOK='https://discord.com/api/webhooks/xxx/yyy' bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/illuminated.sh)\""
  exit 1
fi

# Export for all sub-scripts
export DOMAIN
export DISCORD_WEBHOOK

# Load build helpers
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)

APP="LouMinadiCraft Illuminated"
BRIDGE="vmbr0"
STORAGE="local-lvm"

header_info "$APP Setup"
catch_errors

BASE_URL="https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts"
MODE="${1:-default}"

msg_info "Selected mode: ${MODE}"

run_script() {
  local script_name=$1
  msg_info "Running ${script_name}..."
  bash <(curl -fsSL "${BASE_URL}/${script_name}") "$MODE"
}

# Main logic
if [[ "$MODE" == "--skip-existing" ]]; then
  run_script create_containers.sh
  run_script setup_papermc_server.sh
  run_script setup_bluemap.sh
  run_script setup_backup_service.sh
  run_script setup_static_website.sh
  run_script setup_reverse_proxy.sh
  run_script setup_ssl_certbot.sh
elif [[ "$MODE" == "--reinstall-bluemap" ]]; then
  run_script setup_bluemap.sh
elif [[ "$MODE" == "--reinstall-website" ]]; then
  run_script setup_static_website.sh
else
  run_script create_containers.sh
  run_script setup_papermc_server.sh
  run_script setup_bluemap.sh
  run_script setup_backup_service.sh
  run_script setup_static_website.sh
  run_script setup_reverse_proxy.sh
  run_script setup_ssl_certbot.sh
fi

# Final Screen
clear
header_info "üéâ LouMinadiCraft Illuminated Installed Successfully!"
msg_ok "Minecraft Server ready!"
msg_ok "BlueMap ready!"
msg_ok "Static website ready!"
msg_ok "SSL secured reverse proxy ready!"

echo -e "\nAccess Your Services:"
echo -e "${CYAN}‚Ä¢ Minecraft Server:${NC} Connect using ${DOMAIN} at port 25565"
echo -e "${CYAN}‚Ä¢ Static Website:${NC} https://${DOMAIN}"
echo -e "${CYAN}‚Ä¢ BlueMap:${NC} https://${DOMAIN}/map"

# Write access info
ACCESS_FILE="/home/papermc/access-info.txt"
mkdir -p "$(dirname "$ACCESS_FILE")"
cat > "$ACCESS_FILE" <<EOF
üéÆ LouMinadiCraft Illuminated Access Info

Minecraft Server: ${DOMAIN} :25565
Static Website: https://${DOMAIN}
BlueMap: https://${DOMAIN}/map

Installation Time: $(date)
EOF

msg_ok "Saved access information to ${ACCESS_FILE}"

# Discord notification
DISCORD_MESSAGE="üéÆ LouMinadiCraft Illuminated Setup Complete!

‚Ä¢ Minecraft Server: ${DOMAIN} :25565
‚Ä¢ Website: https://${DOMAIN}
‚Ä¢ BlueMap: https://${DOMAIN}/map

‚úÖ Installation Completed Successfully!"

curl -H "Content-Type: application/json" -X POST \
  -d "{\"content\": \"$DISCORD_MESSAGE\"}" "$DISCORD_WEBHOOK"
msg_ok "Sent access information to Discord!"

```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_reverse_proxy.sh:
```sh
#!/bin/bash
set -euo pipefail

# Load shared functions
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)

msg_info "üîß Setting up Nginx Reverse Proxy..."

CTID=204
IP=$(get_container_ip $CTID)
DOMAIN=${DOMAIN:-"example.com"}

pct exec $CTID -- apt update
pct exec $CTID -- apt install -y nginx

pct exec $CTID -- bash -c "cat > /etc/nginx/sites-available/default" <<EOF
server {
    listen 80;
    server_name ${DOMAIN};

    location / {
        proxy_pass http://192.168.100.200:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }

    location /map/ {
        proxy_pass http://192.168.100.201:8100/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }
}
EOF

pct exec $CTID -- systemctl restart nginx
msg_ok "Nginx reverse proxy configured for http://${DOMAIN}"

```
---

/home/megalith/louminadi/git/illuminated/scripts/create_containers.sh:
```sh
#!/bin/bash
set -euo pipefail

source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)

header_info "Creating LXC Containers"

declare -A containers=(
  [papermc-server]=12288
  [papermc-bluemap]=4096
  [papermc-backups]=1024
  [papermc-website]=512
  [papermc-proxy]=512
)

STORAGE="local-lvm"
BRIDGE="vmbr0"
VMID=200
TEMPLATE_NAME="ubuntu-24.04-standard_24.04-2_amd64.tar.zst"
TEMPLATE="$STORAGE:vztmpl/$TEMPLATE_NAME"

pveam update
if ! pveam list $STORAGE | grep -q "$TEMPLATE_NAME"; then
  msg_info "Downloading missing template..."
  pveam download $STORAGE "$TEMPLATE_NAME"
else
  msg_ok "Template already available: $TEMPLATE_NAME"
fi

PASSWORDS_FILE="/tmp/container-passwords.txt"
> "$PASSWORDS_FILE"

for name in "${!containers[@]}"; do
  echo "üì¶ Creating LXC: $name (VMID $VMID)..."

  ROOT_PW="$(openssl rand -base64 24 | tr -dc 'A-Za-z0-9' | head -c20)"
  echo "$name (CTID $VMID): $ROOT_PW" >> "$PASSWORDS_FILE"

  pct create $VMID $TEMPLATE \
    -hostname $name \
    -storage $STORAGE \
    -rootfs ${STORAGE}:8G \
    -memory ${containers[$name]} \
    -cores 2 \
    -net0 name=eth0,bridge=$BRIDGE,ip=dhcp \
    -password "$ROOT_PW" \
    -unprivileged 1 \
    -features nesting=1

  pct start $VMID
  ((VMID++))
done

# Transfer password file to papermc-server
PAPERMCPATH="/home/papermc/container-passwords.txt"
pct exec 200 -- mkdir -p /home/papermc
pct push 200 "$PASSWORDS_FILE" "$PAPERMCPATH" --perms 600
pct exec 200 -- chown papermc:papermc "$PAPERMCPATH"

msg_ok "Passwords stored at $PAPERMCPATH inside papermc-server"

```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_static_website.sh:
```sh
#!/bin/bash
set -euo pipefail
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)
echo "üåê Setting up static website..."

pct exec 203 -- bash -c "
  apt update &&
  apt install -y nginx &&
  mkdir -p /var/www/louminadicraft &&
  systemctl enable nginx
"

echo "‚úÖ Static website container setup."

```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_bluemap.sh:
```sh
#!/bin/bash
set -euo pipefail
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)
echo "üó∫Ô∏è Setting up BlueMap Renderer..."

pct exec 201 -- bash -c "
  apt update &&
  apt install -y openjdk-17-jre-headless curl &&
  mkdir -p /data &&
  curl -Lo /data/bluemap.jar https://hangar.papermc.io/api/v1/projects/Blue/BlueMap/versions/latest/download
"

echo "‚úÖ BlueMap installed."

# Setup Cron Job for Auto-Render
echo "Setting up BlueMap auto-render every 4 hours..."
pct exec 201 -- bash -c '
echo "0 */4 * * * cd /data && java -jar bluemap.jar --render && systemctl restart bluemap" > /etc/cron.d/bluemap-render
crontab /etc/cron.d/bluemap-render
'

echo "‚úÖ BlueMap auto-render + auto-reload setup complete!"

```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_papermc_server.sh:
```sh
#!/bin/bash
set -euo pipefail
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)
echo "üéÆ Setting up PaperMC server..."

# Install Java and curl
pct exec 200 -- bash -c "
  apt update &&
  apt install -y openjdk-17-jre-headless curl unzip &&
  mkdir -p /papermc/plugins &&
  curl -Lo /papermc/paper.jar https://api.papermc.io/v2/projects/paper/versions/1.21.5/builds/41/downloads/paper-1.21.5-41.jar &&
  echo 'eula=true' > /papermc/eula.txt
"

echo "üì¶ Installing essential plugins..."

# Install plugins automatically
pct exec 200 -- bash -c "
  cd /papermc/plugins &&
  
  # Multiverse Core
  curl -Lo Multiverse-Core.jar https://hangar.papermc.io/api/v1/projects/Multiverse/Multiverse-Core/versions/latest/download &&

  # DirectionHUD
  curl -Lo DirectionHUD.jar https://hangar.papermc.io/api/v1/projects/other/DirectionHUD/versions/latest/download &&

  # GriefPrevention
  curl -Lo GriefPrevention.jar https://hangar.papermc.io/api/v1/projects/GriefPrevention/GriefPrevention/versions/latest/download &&

  # Machines
  curl -Lo Machines.jar https://hangar.papermc.io/api/v1/projects/xenondevs/Machines/versions/latest/download &&

  # SimplePets
  curl -Lo SimplePets.jar https://hangar.papermc.io/api/v1/projects/BSDevelopment/SimplePets/versions/latest/download &&

  # Jetpacks
  curl -Lo Jetpacks.jar https://hangar.papermc.io/api/v1/projects/xenondevs/Jetpacks/versions/latest/download &&

  # Coordinates
  curl -Lo Coordinates.jar https://hangar.papermc.io/api/v1/projects/Maledict/Coordinates/versions/latest/download
"

echo "‚úÖ Plugins installed!"

# Setup Daily Minecraft Restart (for server memory stability)
echo "Setting up daily Minecraft server restart..."
pct exec 200 -- bash -c '
echo "0 5 * * * systemctl restart minecraft" > /etc/cron.d/minecraft-restart
crontab /etc/cron.d/minecraft-restart
'

echo "‚úÖ Daily Minecraft server restart at 5:00AM configured!"


```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_backup_service.sh:
```sh
#!/bin/bash
set -euo pipefail
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)
echo "üíæ Setting up automatic backup service..."

pct exec 202 -- bash -c "
  apt update &&
  apt install -y cron tar &&
  mkdir -p /papermc/backups &&
  echo '0 */4 * * * tar -czf /papermc/backups/backup-\$(date +\\%Y-\\%m-\\%d_\\%H-\\%M-\\%S).tar.gz -C /papermc world plugins && find /papermc/backups -name \"*.tar.gz\" -mtime +7 -delete' > /etc/cron.d/papermc-backups &&
  chmod 0644 /etc/cron.d/papermc-backups &&
  crontab /etc/cron.d/papermc-backups
"

echo "‚úÖ Backup cron job installed."

```
---

/home/megalith/louminadi/git/illuminated/scripts/setup_ssl_certbot.sh:
```sh
#!/bin/bash
set -euo pipefail
source <(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/scripts/build.func)
echo "üîê Setting up SSL with Certbot..."

pct exec 204 -- bash -c "
  apt update &&
  apt install -y certbot python3-certbot-nginx &&
  certbot --nginx --non-interactive --agree-tos --redirect --email admin@$MYDOMAIN -d $DOMAIN
"

echo "‚úÖ SSL Certificate Obtained and Installed."

```
---

/home/megalith/louminadi/git/illuminated/scripts/build.func:
```func
#!/usr/bin/env bash
set -euo pipefail

# Now with more of Steve's Mom.

# Colors
RED='\033[0;91m'
GREEN='\033[0;92m'
YELLOW='\033[0;93m'
CYAN='\033[0;96m'
NC='\033[0m' # No Color
BOLD="\033[1m"
TAB="  "
CM="${TAB}‚úîÔ∏è${TAB}"
CROSS="${TAB}‚úñÔ∏è${TAB}"

# Functions for Messaging
msg_info() {
  echo -e "${CYAN}[INFO]${NC} $1"
}

msg_ok() {
  echo -e "${GREEN}[OK]${NC} $1"
}

msg_error() {
  echo -e "${RED}[ERROR]${NC} $1"
}

header_info() {
  echo -e "${YELLOW}========================================"
  echo -e " $1"
  echo -e "========================================${NC}"
}

catch_errors() {
  trap 'msg_error "An unexpected error occurred at line $LINENO: $BASH_COMMAND" && exit 1' ERR
}

# Check Environment
shell_check() {
  if [[ "$(basename "$SHELL")" != "bash" ]]; then
    msg_error "Default shell is not Bash. Please use Bash."
    exit 1
  fi
}

root_check() {
  if [[ "$(id -u)" -ne 0 ]]; then
    msg_error "Run this script as root."
    exit 1
  fi
}

pve_check() {
  if ! pveversion | grep -q "pve-manager/8"; then
    msg_error "This installer requires Proxmox VE 8.x."
    exit 1
  fi
}

arch_check() {
  if [[ "$(dpkg --print-architecture)" != "amd64" ]]; then
    msg_error "Only amd64 architecture supported."
    exit 1
  fi
}

check_container_storage() {
  local storage=$1
  if ! pvesm status | grep -qw "$storage"; then
    msg_error "Storage '$storage' not found."
    exit 1
  fi
}

# Dynamically get container IP
get_container_ip() {
  local ctid=$1
  pct exec "$ctid" -- ip -4 addr show eth0 | awk '/inet / {print $2}' | cut -d/ -f1
}

```
---

/home/megalith/louminadi/git/illuminated/.gitignore:
```gitignore

```
---

/home/megalith/louminadi/git/illuminated/README.md:
```md
# LouMinadiCraft Illuminated üöÄ

<div align="center">
  <img src="https://img.shields.io/badge/Proxmox-Ready-brightgreen?style=for-the-badge" alt="Proxmox Ready">
  <img src="https://img.shields.io/badge/License-MIT-blue?style=for-the-badge" alt="License: MIT">
  <img src="https://img.shields.io/badge/Install-One--Click-success?style=for-the-badge" alt="One Click Install">
  <img src="https://img.shields.io/badge/Version-1.0.0-orange?style=for-the-badge" alt="Version 1.0.0">
</div>

---

Welcome to **Illuminated** ‚Äî the complete Proxmox LXC-based deployment stack for building and running your **LouMinadiCraft** Minecraft server experience.

This project automates everything needed to host a professional-grade server featuring:

- üõ°Ô∏è Custom PaperMC Minecraft Server
- üó∫Ô∏è Live 3D BlueMap World Renderer
- üíæ Automatic World + Plugin Backups
- üåê Glowing Landing Page Website
- üîí HTTPS Reverse Proxy with Let's Encrypt SSL
- üåü **Custom LouMinadiCraft Plugin** ‚Äî a handcrafted world full of new biomes, treasures, and adventures!

---

## üöÄ Install (One Command)

```bash
bash -c "$(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/illuminated.sh)"
```

> **Run this directly on your Proxmox VE node!**

---

## ‚ôªÔ∏è Upgrade to Newer Versions

```bash
bash -c "$(curl -fsSL https://raw.githubusercontent.com/rickcollette/illuminated/main/illuminated.sh)"
```

‚úÖ Safe upgrade of services, plugins, and containers.

---

## üõ†Ô∏è What It Creates

| Service | Container Name | Purpose |
|:---|:---|:---|
| Minecraft Server | `papermc-server` | Runs your LouMinadiCraft Minecraft server |
| BlueMap Renderer | `papermc-bluemap` | Renders 3D live maps of your world |
| Backup Service | `papermc-backups` | Creates compressed backups every 4 hours |
| Static Website | `papermc-website` | Serves your glowing website |
| Reverse Proxy | `papermc-proxy` | Terminates SSL and routes incoming traffic securely |

---

## üåü About the **LouMinadiCraft Plugin**

The heart of Illuminated is the **LouMinadiCraft** plugin ‚Äî a **custom-built PaperMC plugin** that reimagines your Minecraft world.

> LouMinadiCraft transforms Minecraft into a **beautiful, adventurous, illuminated realm**.

- üåé New Biomes
- üè∞ Secret Structures
- üõ°Ô∏è Custom Items
- ‚öîÔ∏è Adventure Systems
- üõ†Ô∏è Performance Optimizations
- üåü Full BlueMap Support

---

## ‚ú® Showcasing LouMinadiCraft Features

| Feature | Description |
|:---|:---|
| üåé Custom Biomes | Unique handcrafted biomes: Crystal Plains, Shadowed Forest, Ember Highlands |
| üè∞ Custom Structures | Temples, ruins, underground cities hidden across the world |
| ‚ö° Enhanced World Generation | Floating islands, smarter ravines, lush caves |
| üõ°Ô∏è Custom Items | Legendary artifacts and specialized gear |
| ‚öîÔ∏è Adventure Mechanics | Quests, dungeons, rare loot events |
| üöÄ Lightweight Performance | Designed for fast, smooth multiplayer play |
| üåü Full BlueMap Support | Biomes and structures visible in BlueMap live view |

---

## üìã Requirements

- Proxmox VE 7.x or 8.x
- Ubuntu 24.04 LXC templates
- Public DNS records for your domain
- NAT/Firewall rules for ports 80, 443, 25565
- At least 16GB RAM recommended for smooth server and map rendering

---

## üìú How It Works

- Creates modular LXC containers
- Installs dependencies and core services
- Deploys PaperMC server with LouMinadiCraft plugin
- Installs BlueMap renderer
- Configures backup automation
- Deploys static website and HTTPS
- Modular architecture for future upgrades

---

## üìö Advanced Usage

- Add plugins easily
- Customize nginx reverse proxy
- Deploy additional containers (e.g., dynmap, statistics server)
- Scale with Proxmox clustering

---

## üõ°Ô∏è Security Notice

Only the **reverse proxy container** (`papermc-proxy`) is exposed publicly.
All backend services remain **shielded inside Proxmox private network**.

---

## ‚ú® Screenshots

<p align="center">
  <img src="https://yourdomain.com/screenshots/banner.png" width="800" alt="Banner">
</p>

<p align="center">
  <img src="https://yourdomain.com/screenshots/landing-demo.gif" width="700" alt="Landing Page Demo">
</p>

<p align="center">
  <img src="https://yourdomain.com/screenshots/bluemap-demo.gif" width="700" alt="BlueMap Live View">
</p>

---

## ü§ù Contributing

Pull requests and suggestions welcome!  
Expand LouMinadiCraft, add themes, build new adventures!

---

## üìú License

This project is licensed under the **MIT License** ‚Äî free for commercial or personal use.

---

**Built with ‚ù§Ô∏è by [Rick Collette](https://github.com/rickcollette)**

```

---

**Credit where it is due: Thank you <https://louminardiscornfarm.com/> for having an amazing name.**

```
---
