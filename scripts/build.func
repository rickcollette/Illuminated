#!/usr/bin/env bash
set -euo pipefail

# Colors
RED='\033[0;91m'
GREEN='\033[0;92m'
YELLOW='\033[0;93m'
CYAN='\033[0;96m'
NC='\033[0m' # No Color
BOLD="\033[1m"
TAB="  "
CM="${TAB}✔️${TAB}"
CROSS="${TAB}✖️${TAB}'

# Functions for Messaging
msg_info() {
  echo -e "${CYAN}[INFO]${NC} $1"
}

msg_ok() {
  echo -e "${GREEN}[OK]${NC} $1"
}

msg_error() {
  echo -e "${RED}[ERROR]${NC} $1"
}

header_info() {
  echo -e "${YELLOW}========================================"
  echo -e " $1"
  echo -e "========================================${NC}"
}

catch_errors() {
  trap 'msg_error "An unexpected error occurred at line $LINENO: $BASH_COMMAND" && exit 1' ERR
}

# Check Environment
shell_check() {
  if [[ "$(basename "$SHELL")" != "bash" ]]; then
    msg_error "Default shell is not Bash. Please use Bash."
    exit 1
  fi
}

root_check() {
  if [[ "$(id -u)" -ne 0 ]]; then
    msg_error "Run this script as root."
    exit 1
  fi
}

pve_check() {
  if ! pveversion | grep -q "pve-manager/8"; then
    msg_error "This installer requires Proxmox VE 8.x."
    exit 1
  fi
}

arch_check() {
  if [[ "$(dpkg --print-architecture)" != "amd64" ]]; then
    msg_error "Only amd64 architecture supported."
    exit 1
  fi
}

check_container_storage() {
  local storage=$1
  if ! pvesm status | grep -qw "$storage"; then
    msg_error "Storage '$storage' not found."
    exit 1
  fi
}

# Dynamically get container IP
get_container_ip() {
  local ctid=$1
  pct exec "$ctid" -- ip -4 addr show eth0 | awk '/inet / {print $2}' | cut -d/ -f1
}
