#!/usr/bin/env bash
set -euo pipefail

# Colors
RED='\033[0;91m'
GREEN='\033[0;92m'
YELLOW='\033[0;93m'
CYAN='\033[0;96m'
NC='\033[0m' # No Color
BOLD="\033[1m"
TAB="  "
CM="${TAB}✔️${TAB}"
CROSS="${TAB}✖️${TAB}"

# Functions for Messaging
msg_info() {
  echo -e "${CYAN}[INFO]${NC} $1"
}

msg_ok() {
  echo -e "${GREEN}[OK]${NC} $1"
}

msg_error() {
  echo -e "${RED}[ERROR]${NC} $1"
}

header_info() {
  echo -e "${YELLOW}========================================"
  echo -e " $1"
  echo -e "========================================${NC}"
}

# Catch unexpected errors
catch_errors() {
  trap 'msg_error "An unexpected error occurred at line $LINENO: $BASH_COMMAND" && exit 1' ERR
}

# Basic Proxmox Environment Checks
shell_check() {
  if [[ "$(basename "$SHELL")" != "bash" ]]; then
    msg_error "Your shell is not Bash. Please use Bash to run these scripts."
    exit 1
  fi
}

root_check() {
  if [[ "$(id -u)" -ne 0 ]]; then
    msg_error "Please run this script as root."
    exit 1
  fi
}

pve_check() {
  if ! pveversion | grep -q "pve-manager/8"; then
    msg_error "This installer requires Proxmox VE 8.x."
    exit 1
  fi
}

arch_check() {
  if [[ "$(dpkg --print-architecture)" != "amd64" ]]; then
    msg_error "This script only supports amd64 architecture."
    exit 1
  fi
}

# Basic storage check
check_container_storage() {
  STORAGE=$1
  if ! pvesm status | grep -qw "$STORAGE"; then
    msg_error "Storage '$STORAGE' not found on this node."
    exit 1
  fi
}

# Template Downloader
download_template() {
  local storage=$1
  local template_name=$2

  if ! pveam list $storage | grep -q "$template_name"; then
    msg_info "Downloading template $template_name..."
    pveam download $storage $template_name
    msg_ok "Template $template_name downloaded."
  else
    msg_ok "Template $template_name already present in $storage."
  fi
}

# Simple container builder (for raw pct create)
build_container() {
  pct create ${CTID} ${OSTEMPLATE} \
    --rootfs ${STORAGE}:${DISK} \
    -hostname ${HOSTNAME} \
    -memory ${MEMORY} \
    -cores ${CORES} \
    -net0 name=eth0,bridge=${BRIDGE},ip=dhcp \
    -unprivileged 1 \
    -features nesting=1 \
    -tags ${TAGS}
}

